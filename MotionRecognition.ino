#include "Wire.h"
#include <SPI.h>
#include <RF24.h>
#include <nRF24L01.h>
#include <RF24_config.h>

int led = 3;                             // PIN OUTPUT LED
RF24 radio(9,10);                        // CE & CSN
const uint64_t address = 0xE8E8F0F0E1LL; //ALAMAT RADIO
int16_t kirim[6][3];                     // array untuk data yang diterima dari perangkat pengirim
int K = 12;                               // Nilai K untuk klasifikasi
int16_t mode[3];

/*    DATA TRAINING   */
int16_t DT[30][6][3]={
  //data 1 Melambai kebawah (mati)
    {{17912, 6928,  -10852},{16688,  6340,  -16468},{10588,  3472,  -15944},{-27208,  -1912, 8072},{-32768, -5524, 19264},{1,0,0}},
    {{18028, 11360, -21112},{11612,  6568,  -19640},{1356 , 1056,  -9056},{-27700,  -7056, 5028},{-15344, -2864, -64},{1,0,0}},
    {{18080, 6584,  -20496},{11436,  4796,  -15792},{4272,  332, -908},{-16500, 580, 15708},{-15444,  -5428, 22964},{1,0,0}},
    {{19144, 7156,  -14108},{20328,  4692,  -17936},{12640,  1912,  -11400},{-7988,  -1528, 10288},{-7876, 728, 10008},{1,0,0}},
    {{18944, 7480,  -14108},{16748,  3000,  -13964},{4024,  1140,  -5716},{-21336,  3160,  14700},{-13024,  -3620, 836},{1,0,0}},
    {{17684, 10524, -22116},{10564,  3216,  -18296},{4024,  1140,  -5716},{17684,  10524, -22116},{10564,  3216,  -18296},{1,0,0}},
    {{-11548,1692,  2684},{-28216, 3216,  1328},{-31500, -5588, -1248},{-15888,  -2748, -2632},{-13440,  564, -5436},{1,0,0}},
    {{14720, 4660,  1412},{9084, 664, -2292},{1080, 3716,  -240},{-19344, -5936, 652},{-15856, -3956, 1264},{1,0,0}},
    {{13484, 6228,  -14752},{5404,  3936,  -5208},{-4800,  -452,  3148},{-17340,  -2028, 24400},{-14300,  -9148, 32736},{1,0,0}},
    {{16544, 4788,  -20416},{7420,  1848,  -11508},{644, 1756,  1936},{-4740,  -5316, 18708},{-5432, -7356, 25356},{1,0,0}},
  //data 2 Melambai ke kiri (meredup)
    {{2136,  28280, 5636},{484, 25364, 8588},{2028,  14696, 4976},{-7708, -30488,  -6072},{-6168, -15800,  -3764},{2,0,0}},
    {{-12076,  -6228, 28084},{-10212,  -6060, 22236},{-4596,  -5992, 11264},{3632, -2356, -30396},{1368, -2660, -20492},{2,0,0}},
    {{948,  23488, 11564},{3044, 17700, 10396},{2140,  7016 , 5796},{3256, -10000,  -2456},{396,  -32768,  208},{2,0,0}},
    {{3396,  20064, 8120},{6564, 15244, 8624},{5728, 8832,  3128},{2804, -30240,  -4784},{2232 , -17936,  -3876},{2,0,0}},
    {{7652, 22964, 6080},{7496, 17816, 10092},{5000,  10204, 4436},{11248, -21180,  -2900},{8444, -16384,  -1856},{2,0,0}},
    {{-1860,  23504, 12756},{-2180, 22388, 12756},{-600, 14844, 10292},{-4340,  -30720,  -5096},{-4092, -25736,  -4012},{2,0,0}},
    {{-448,  17204, 13280},{2984,  15352, 11332},{5416,  11000, 10076},{-7228, -24764 , -3712},{-6136, -18268,  -1900},{2,0,0}},
    {{2352,  15352, 15044},{2220,  16472, 15516},{3812,  14972, 12192},{-1252,  -19028,  -6844},{-3392, -23212,  -9180},{2,0,0}},
    {{-444,  14608, 14576},{236,  16584, 12256},{852, 14544, 11112},{-2120, -23748,  -2564},{-1188, -17832,  -996},{2,0,0}},
    {{-4088,  3000,  24424},{-3812, 1912,  22540},{1340, 164, 11492},{-416,  -5332, -23192},{-3824, -7356, -28188},{2,0,0}},
  //data 3 Melambai ke atas (nyala)
    {{-14504,  652, -2396},{-19592,  -2448, 4728},{-30128, -2300, 8480},{-1592, -664,  -4084},{8900, 4576,  -10636},{3,0,0}},
    {{-17500,  -4244, 2352},{-30540, -10156,  9040},{-32768, -8348, 6920},{2844, 1240,  -3460},{10584,  3168,  -6208},{3,0,0}},
    {{-14120,  1564,  -2208},{-26048,  -8420, 10068},{-32768,  -5088, 5732},{15708, 6580,  -10316},{18416,  9300,  -9280},{3,0,0}},
    {{-15004,  -4284, 18904},{-20408,  -7352, 24376},{-17484,  -6408, 15628},{19420,  6940,  -11548},{17892,  4656,  -6168},{3,0,0}},
    {{-5652 , -2928, 10004},{-11256, -7012, 20936},{-12260,  -8084, 19932},{18512,  6240,  -7664},{19888, 4768,  -4648},{3,0,0}},
    {{-11844,  2688,  -20832},{-17976, 2608,  -26744},{-24996, 668, -27256},{6584, -5936, 18160},{11876,  -3276, 13428},{3,0,0}},
    {{-11212,  1292,  -9700},{-7540,  -688,  -24660},{-19688,  -248,  -32768},{10544, -7356, 12404},{11420, -6240, 14416},{3,0,0}},
    {{-11848,  1108,  -11288},{-9636, -1972, -21084},{-14268,  -1816, -25924},{11348, -3072, 9992},{13632,  -2920, 11952},{3,0,0}},
    {{-312 , 1296,  -16348},{3920, 2144,  -32768},{-484, -632,  -32768},{14992, -1132, 9708},{12488,  1948,  11500},{3,0,0}},
    {{32,  -212,  -18844},{2496, 1556,  -30060},{2564, 1280,  -31112},{11792, -2184, 11132},{11644, -624,  12132},{3,0,0}}    
};

void setup() {
  Serial.begin(115200);
  SPI.begin();
  pinMode(led, OUTPUT);
  radio.begin();
  radio.openReadingPipe(1, address);
  radio.startListening();
  Serial.println("Stand By");
  
}

void loop() {
  if(radio.available())
  {
    unsigned long first = 0;
    first = millis();
    delay(30);
    radio.read(&kirim , sizeof(kirim)); //paket data yang diterima
    Serial.println("Paket yang diterima");
    for(int z = 0; z<5 ; z++)
    {
      Serial.print(z+1); Serial.print("\t");
      Serial.print(kirim[z][0]); Serial.print("\t");
      Serial.print(kirim[z][1]); Serial.print("\t");
      Serial.println(kirim[z][2]);
    }
    Serial.println(" ");
    klasifikasi(kirim,DT);
    ulang(DT);
    unsigned long  last = millis();
    unsigned long  hasil = (last - first); 
    Serial.print(hasil); Serial.println(" miliseconds");
  }   
}

void klasifikasi(int16_t kirim[6][3],int16_t DT[15][6][3]){
  int16_t d, d1;
  Serial.println("Eudlidean Distance : ");
  for (int a = 0; a < 30 ; a++ ){
    for( int b = 0 ; b < 5 ; b++){
       d = sqrt(abs(pow((DT[a][b][0] - kirim[b][0]),2)) + abs(pow((DT[a][b][1] - kirim[b][1]),2)) + abs(pow((DT[a][b][2] - kirim[b][2]),2)));
       d1 = abs(d);    
    }
    DT[a][5][1] = d1;
    Serial.print(a+1); Serial.print("\t");Serial.println(DT[a][5][1]); 
    
    //reset variabel
    d = d1 = 0;
  } 
  Serial.println("");
  sorting(DT);
}

int sorting(int16_t DT[15][6][3]){
  int16_t tmp[3];
  Serial.println("data setelah diurutkan");
  //mengurutkan 
  for (int a = 0; a < 30 ; a++){
    for (int b = a+1; b < 30; b++){
       if (DT[a][5][1]>DT[b][5][1]){
        tmp[0] = DT[a][5][0]; tmp[1] = DT[a][5][1];  tmp[2] = DT[a][5][2];
        DT[a][5][0] = DT[b][5][0]; DT[a][5][1] = DT[b][5][1]; DT[a][5][2] = DT[b][5][2];
        DT[b][5][0] = tmp[0]; DT[b][5][1] = tmp[1]; DT[b][5][2] = tmp[2];
       }
    }
    Serial.print(a+1); Serial.print("\t");
    Serial.print(DT[a][5][1]); Serial.print("\t");
    Serial.println(DT[a][5][0]);
  }

  //MODULUS 
  int hitung = 1, hitung2 = 1;
  for (int c = 0; c<K; c++){
    for(int d = c+1 ; d<K ; d++){
      if (DT[c][5][0] == DT[d][5][0]){
        hitung++;
      } else {
        if (hitung > hitung2){
           hitung2 = hitung;
           mode[0] = DT[c][5][0]; mode[1] = DT[c][5][1]; mode[2] = DT[c][5][2];
        }
        hitung = 1;
      }
    } 
  }
  lampu();
};

//KONDISI LAMPU
void lampu(){
  if (mode[0] == 1){ //mati
    analogWrite(led, 0);
  }
  else if (mode[0] == 2) { //redup
    analogWrite(led, 50);
  }
  else if (mode[0] == 3) { //nyala
    analogWrite(led, 255);
  }
  Serial.println("  ");
  Serial.print("mode = ");Serial.println(mode[0]);
}

//reset label data training
void ulang(int16_t DT[30][6][3] ){
  for(int a = 0; a<30 ; a++){
    if (a<10){
      DT[a][5][0] = 1;
    } else if (a>9 && a<19){
      DT[a][5][0] = 2;
    } else if (a>19){
      DT[a][5][0] = 3;
    }
    DT[a][5][1] = 0;
    DT[a][5][2] = 0;
  }
 }

